// <auto-generated />
using MarvelSnapProject.Component.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MarvelSnapProject.Migrations
{
    [DbContext(typeof(MarvelSnapDatabase))]
    [Migration("20231227032659_Init Marvel Snap Database")]
    partial class InitMarvelSnapDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.14");

            modelBuilder.Entity("MarvelSnapProject.Component.Database.Card", b =>
                {
                    b.Property<int>("CardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Ability")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CardName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsOnGoing")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsOnReveal")
                        .HasColumnType("INTEGER");

                    b.HasKey("CardId");

                    b.ToTable("Cards");

                    b.HasData(
                        new
                        {
                            CardId = 1,
                            Ability = 0,
                            CardName = "Abomination",
                            Description = "Foolish rabble! You are beneath me!",
                            IsOnGoing = false,
                            IsOnReveal = false
                        },
                        new
                        {
                            CardId = 2,
                            Ability = 0,
                            CardName = "Cyclops",
                            Description = "Lets move, X-men.",
                            IsOnGoing = false,
                            IsOnReveal = false
                        },
                        new
                        {
                            CardId = 3,
                            Ability = 0,
                            CardName = "Hawkeye",
                            Description = "On Reveal: if you play a card at this location next turn, +3 power.",
                            IsOnGoing = false,
                            IsOnReveal = true
                        },
                        new
                        {
                            CardId = 4,
                            Ability = 0,
                            CardName = "Hulk",
                            Description = "HULK SMASH!",
                            IsOnGoing = false,
                            IsOnReveal = false
                        },
                        new
                        {
                            CardId = 5,
                            Ability = 0,
                            CardName = "Iron Man",
                            Description = "On Going: Your total Power is doubled at this location.",
                            IsOnGoing = true,
                            IsOnReveal = false
                        },
                        new
                        {
                            CardId = 7,
                            Ability = 0,
                            CardName = "Medusa",
                            Description = "On Reveal: if this at the middle location, +3 Power.",
                            IsOnGoing = false,
                            IsOnReveal = true
                        },
                        new
                        {
                            CardId = 10,
                            Ability = 0,
                            CardName = "Quick Silver",
                            Description = "Starts in your opening hand",
                            IsOnGoing = false,
                            IsOnReveal = false
                        },
                        new
                        {
                            CardId = 15,
                            Ability = 0,
                            CardName = "Thing",
                            Description = "It's clobberin' time!",
                            IsOnGoing = false,
                            IsOnReveal = false
                        });
                });

            modelBuilder.Entity("MarvelSnapProject.Component.Database.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Ability")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsOnGoing")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsOnReveal")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.HasKey("LocationId");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            LocationId = 6,
                            Ability = 0,
                            Description = "Cards can't be played here.",
                            IsOnGoing = false,
                            IsOnReveal = false,
                            LocationName = "Flooded"
                        },
                        new
                        {
                            LocationId = 7,
                            Ability = 0,
                            Description = "When a card moves here, give it +2 Power.",
                            IsOnGoing = true,
                            IsOnReveal = false,
                            LocationName = "K'un-Lun"
                        },
                        new
                        {
                            LocationId = 8,
                            Ability = 0,
                            Description = "Cards here have -3 Power.",
                            IsOnGoing = true,
                            IsOnReveal = false,
                            LocationName = "Negative Zone"
                        },
                        new
                        {
                            LocationId = 9,
                            Ability = 0,
                            Description = "-",
                            IsOnGoing = false,
                            IsOnReveal = false,
                            LocationName = "Ruins"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
